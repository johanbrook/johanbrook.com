{"version":3,"sources":["/src/js/config.ts","/src/js/util.ts","/src/js/github.ts","/src/js/app.ts","/src/admin.ts"],"sourcesContent":["export interface Config {\n\towner: string;\n\trepo: string;\n\tnotesDir: string;\n}\n\nexport const config: Config = {\n\towner: 'johanbrook',\n\trepo: 'johanbrook.com',\n\tnotesDir: 'src/notes',\n};\n\nexport const isLocal = () => location.hostname == 'localhost';\n","export interface Err {\n\tkind: 'err';\n\tmsg: string;\n\tcause?: Error;\n}\n\nexport type Result<T> = T | Err;\n\nexport const promiseResult = <T>(p: Promise<T | Err>): Promise<T> =>\n\tnew Promise((rs, rj) => p.then((v) => (isErr(v) ? rj(new Error(v.msg)) : rs(v))).catch(rj));\n\nexport const isErr = (t: unknown): t is Err => (t as Err).kind == 'err';\n","import { Endpoints } from '../../deps.ts';\nimport { config, isLocal } from './config.ts';\nimport type { Service } from './service.ts';\nimport { type Err, isErr } from './util.ts';\n\nconst STORAGE_KEY = 'jb_tok';\n\nconst API_ROOT = 'https://api.github.com';\n\nexport interface Args {\n\turl: string;\n}\n\nexport const mkGitHub = ({ url }: Args): Service => {\n\tconst doAuth = () => {\n\t\tlocation.href = url;\n\t};\n\n\tconst request = async <T, B = Record<never, never>>(\n\t\tresource: `/${string}`,\n\t\t{\n\t\t\tmethod = 'GET',\n\t\t\tquery,\n\t\t\tbody,\n\t\t}: {\n\t\t\tmethod?: 'GET' | 'POST' | 'PUT';\n\t\t\tquery?: Record<string, string>;\n\t\t\tbody?: B;\n\t\t} = {},\n\t): Promise<T | Err> => {\n\t\tconst storedTok = getStoredToken();\n\n\t\tif (!storedTok) {\n\t\t\tdoAuth();\n\t\t\treturn Promise.resolve({} as T);\n\t\t}\n\n\t\tconst qs: string = query ? '?' + new URLSearchParams(query).toString() : '';\n\n\t\tconst res = await fetch(API_ROOT + resource + qs, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\taccept: 'application/vnd.github.v3+json',\n\t\t\t\tauthorization: `token ${storedTok}`,\n\t\t\t},\n\t\t\tbody: body ? JSON.stringify(body) : undefined,\n\t\t});\n\n\t\tconst json = await res.json();\n\n\t\tif (!res.ok) {\n\t\t\tif (res.status == 401) {\n\t\t\t\tdoAuth();\n\t\t\t\treturn Promise.resolve({} as T);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tkind: 'err',\n\t\t\t\tmsg: 'Failed to request GitHub REST data',\n\t\t\t\tcause: new Error(\n\t\t\t\t\t`${method} ${res.status} ${resource}: ${json.message || res.statusText}`,\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\treturn json;\n\t};\n\n\ttype AuthError = { error: string };\n\ttype AuthSuccess = { token: string };\n\n\tconst isAuthError = (err: Record<string, unknown>): err is AuthError =>\n\t\t!!(err as AuthError).error;\n\n\tconst fetchToken: Service['fetchToken'] = async (code) => {\n\t\t// remove ?code=... from URL\n\t\tconst path = location.pathname +\n\t\t\tlocation.search.replace(/\\bcode=\\w+/, '').replace(/\\?$/, '');\n\t\thistory.pushState({}, '', path);\n\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\tmode: 'cors',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({ code }),\n\t\t});\n\n\t\tif (!res.ok) {\n\t\t\treturn {\n\t\t\t\tkind: 'err',\n\t\t\t\tmsg: res.statusText,\n\t\t\t};\n\t\t}\n\n\t\tconst result: AuthSuccess | AuthError = await res.json();\n\n\t\tif (isAuthError(result)) {\n\t\t\treturn {\n\t\t\t\tkind: 'err',\n\t\t\t\tmsg: result.error,\n\t\t\t};\n\t\t}\n\n\t\ttry {\n\t\t\tlocalStorage.setItem(STORAGE_KEY, result.token);\n\t\t} catch (_ex) {\n\t\t\t//\n\t\t}\n\n\t\treturn {\n\t\t\tkind: 'token',\n\t\t\ttok: result.token,\n\t\t};\n\t};\n\n\tconst createNote: Service['createNote'] = async (text, draft) => {\n\t\ttype Endpoint = Endpoints['PUT /repos/{owner}/{repo}/contents/{path}'];\n\n\t\tconst d = new Date();\n\t\tconst { repo, owner, notesDir } = config;\n\t\tconst branch = isLocal() ? 'dev' : 'main';\n\t\tconst date = formatDate(d);\n\t\tconst fileDate = formatDate(d, true);\n\n\t\tlet content = `---\ndate: ${date}\nlocation: On the run\n`;\n\n\t\tif (draft) {\n\t\t\tcontent += 'draft: true';\n\t\t}\n\n\t\tcontent += `\\n---\\n${text}\\n`;\n\n\t\tconst fileName = `${fileDate}.md`;\n\t\tconst path = notesDir + '/' + fileName;\n\n\t\tconst res = await request<\n\t\t\tEndpoint['response']['data'],\n\t\t\tOmit<Endpoint['parameters'], 'path' | 'repo' | 'owner'>\n\t\t>(`/repos/${owner}/${repo}/contents/${path}`, {\n\t\t\tmethod: 'PUT',\n\t\t\tbody: {\n\t\t\t\tmessage: 'Add note from GUI app',\n\t\t\t\tcontent: base64(content),\n\t\t\t\tbranch,\n\t\t\t},\n\t\t});\n\n\t\tif (isErr(res)) return res;\n\n\t\tif (\n\t\t\t!res.content?.name ||\n\t\t\t!res.content?.html_url ||\n\t\t\t!res.commit.html_url\n\t\t) {\n\t\t\treturn {\n\t\t\t\tkind: 'err',\n\t\t\t\tmsg: 'Unexpected response when creating a note',\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tcommitUrl: res.commit.html_url,\n\t\t\tfile: res.content.name,\n\t\t\tfileUrl: res.content.html_url,\n\t\t};\n\t};\n\n\tconst maybeLogin: Service['maybeLogin'] = () => {\n\t\tconst storedTok = getStoredToken();\n\n\t\tif (!storedTok) {\n\t\t\tlocation.href = url;\n\t\t}\n\t};\n\n\treturn {\n\t\tmaybeLogin,\n\t\tfetchToken,\n\t\tcreateNote,\n\t};\n};\n\nconst getStoredToken = (): string | null => {\n\ttry {\n\t\treturn localStorage.getItem(STORAGE_KEY);\n\t} catch (_ex) {\n\t\treturn null;\n\t}\n};\n\n// From https://stackoverflow.com/questions/30106476/using-javascripts-atob-to-decode-base64-doesnt-properly-decode-utf-8-strings\n// To not mess up utf-8 chars in the string.\nconst base64 = (str: string) =>\n\tbtoa(\n\t\tencodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (_match, p1) =>\n\t\t\tString.fromCharCode(parseInt(p1, 16))),\n\t);\n\n// => 'yyyy-MM-dd HH:mm:ss'\n// fileName: true => 'yyyy-MM-dd-HH-mm'\nconst formatDate = (date: Date, fileName = false): string => {\n\tconst datePart = [\n\t\tdate.getUTCFullYear(),\n\t\tdate.getUTCMonth() + 1,\n\t\tdate.getUTCDate(),\n\t]\n\t\t.map((n) => String(n).padStart(2, '0'))\n\t\t.join('-');\n\n\tconst timePart = [\n\t\tdate.getUTCHours(),\n\t\tdate.getUTCMinutes(),\n\t\tfileName ? null : date.getUTCSeconds(),\n\t]\n\t\t.filter(Boolean)\n\t\t.map((n) => String(n).padStart(2, '0'))\n\t\t.join(fileName ? '-' : ':');\n\n\tif (fileName) {\n\t\treturn datePart + '-' + timePart;\n\t}\n\n\treturn datePart + ' ' + timePart;\n};\n","import { config, isLocal } from './config.ts';\nimport { Args as GitHubArgs, mkGitHub } from './github.ts';\nimport type { CreateNoteResult, Service } from './service.ts';\nimport { Err, isErr } from './util.ts';\n\nconst WORKER_URL = isLocal()\n\t? 'http://localhost:8788/github-oauth'\n\t: 'https://brookie.pages.dev/github-oauth';\n\ninterface Services {\n\tgithub: GitHubArgs;\n}\n\nconst mkService = <T extends keyof Services>(\n\t_service: T,\n\targs: Services[T],\n): Service => {\n\treturn mkGitHub(args);\n};\n\ninterface State {\n\terr?: Err;\n\tcreateNote?: CreateNoteResult;\n}\n\nexport const runApp = async () => {\n\tconst svc = mkService('github', { url: WORKER_URL });\n\tconst root = document.getElementById('root')!;\n\n\tconst initial = initialState();\n\tconst setState = reducer(initial);\n\n\tconst renderApp = App(svc);\n\n\tconst html = async (s: State) => {\n\t\troot.innerHTML = await renderApp(s);\n\t};\n\n\tconst tick = async (update: Partial<State>) => {\n\t\tconsole.log('update', update);\n\t\tconst state = setState(update);\n\t\tconsole.log('state', state);\n\n\t\t// Side effects\n\t\tawait html(state);\n\t};\n\n\t(window as any).handleEvt = async (evt: Event, action: Action) => {\n\t\tconsole.log('event', evt, action);\n\n\t\tswitch (action.kind) {\n\t\t\tcase 'note_input': {\n\t\t\t\tconst textarea = evt.target as HTMLTextAreaElement;\n\n\t\t\t\t((window as any).submitNote as HTMLInputElement).disabled =\n\t\t\t\t\ttextarea.value.trim().length == 0;\n\n\t\t\t\t// Autogrow\n\t\t\t\ttextarea.parentElement!.dataset.replicatedValue = textarea.value;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'submit_note': {\n\t\t\t\tevt.preventDefault();\n\t\t\t\tconst form = evt.target as HTMLFormElement;\n\n\t\t\t\tconst text = form\n\t\t\t\t\t.querySelector('textarea')!\n\t\t\t\t\t.value.trim();\n\n\t\t\t\tconst draft = form\n\t\t\t\t\t.querySelector<HTMLInputElement>('#draft-check')\n\t\t\t\t\t.checked;\n\n\t\t\t\tif (!text) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst res = await svc.createNote(text, draft);\n\n\t\t\t\tif (isErr(res)) {\n\t\t\t\t\tawait tick({ err: res });\n\t\t\t\t} else {\n\t\t\t\t\tflash(\n\t\t\t\t\t\t(window as any).submitNote as HTMLInputElement,\n\t\t\t\t\t\t'✨ posted! ✨',\n\t\t\t\t\t);\n\n\t\t\t\t\tawait tick({ createNote: res });\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t// Initial render\n\tawait tick(initial);\n};\n\nconst App = (svc: Service) => {\n\treturn async (state: State) => {\n\t\tconst code = new URL(location.href).searchParams.get('code');\n\n\t\tif (code) {\n\t\t\tconst res = await svc.fetchToken(code);\n\n\t\t\tif (isErr(res)) {\n\t\t\t\treturn Error(res);\n\t\t\t}\n\t\t}\n\n\t\tsvc.maybeLogin();\n\n\t\tif (state.err) {\n\t\t\treturn Error(state.err);\n\t\t}\n\n\t\treturn /* html */ `\n            <section>\n                <h1 class=\"mb2 no-rhythm\">${config.repo}</h1>\n                <p>\n                    <a href=\"https://github.com/${config.owner}/${config.repo}\">${config.owner}/${config.repo}</a>\n                </p>\n\n                ${NewNote()}\n\n                ${\n\t\t\tstate.createNote\n\t\t\t\t? `<p>Note created in repo: <a href=\"${state.createNote.fileUrl}\">${state.createNote.file}</a></p>`\n\t\t\t\t: ''\n\t\t}\n\n                <p>\n                    <a href=\"/mind\" class=\"f6\">View all notes</a>\n                </p>\n            </section>`;\n\t};\n};\n\nconst reducer = <S>(state: S) => {\n\tfunction* gen() {\n\t\tlet update: Partial<S> = {};\n\t\tlet prev: S = state;\n\n\t\twhile (true) {\n\t\t\tconst newState = { ...prev, ...update };\n\t\t\tprev = newState;\n\t\t\tupdate = yield newState as S;\n\t\t}\n\t}\n\n\tconst r = gen();\n\tr.next(state); // Initial\n\n\treturn (update: Partial<S>) => r.next(update).value as S;\n};\n\ninterface SubmitNote {\n\tkind: 'submit_note';\n}\n\ninterface NoteInput {\n\tkind: 'note_input';\n}\n\ninterface ToggleDraft {\n\tkind: 'toggle_draft';\n}\n\ntype Action = SubmitNote | NoteInput | ToggleDraft;\n\nconst ev = <T extends keyof DocumentEventMap>(e: T, action: Action) =>\n\t`on${e}='handleEvt(event${action ? ', ' + JSON.stringify(action) : ''})'`;\n\nconst NewNote = () => /* HTML */ `\n    <form\n        ${\n\tev('submit', {\n\t\tkind: 'submit_note',\n\t})\n}\n        class=\"measure-narrow mx-auto\"\n    >\n        <h2>New note</h2>\n\n        <div class=\"grow-wrap mb3\">\n            <textarea\n                ${ev('input', { kind: 'note_input' })}\n                placeholder=\"Text…\"\n                class=\"w-full f5\"\n            ></textarea>\n        </div>\n\n        <p>\n            <label>\n                <input class=\"checkbox-fix\" type=\"checkbox\" id=\"draft-check\">\n                Draft\n            </label>\n        </p>\n\n        <p>\n            <input\n                type=\"submit\"\n                id=\"submitNote\"\n                value=\"Post it\"\n                class=\"btn\"\n                disabled\n            />\n        </p>\n    </form>\n`;\n\nconst Error = (err: Err) => /* html */ `\n    <section>\n        <h1>Error</h1>\n        <p>${err.msg}</p>\n        ${err.cause ? `<pre>${err.cause.message}</pre>` : ''}\n    </section>\n`;\n\nconst flash = (el: HTMLElement, msg: string) => {\n\tconst org = el instanceof HTMLInputElement ? el.value : el.innerText;\n\n\tconst set = (str: string, disable: boolean) => {\n\t\tif (el instanceof HTMLInputElement) {\n\t\t\tel.value = str;\n\t\t\tel.disabled = disable;\n\t\t} else {\n\t\t\tel.innerText = str;\n\t\t}\n\t};\n\n\tset(msg, true);\n\n\tsetTimeout(() => {\n\t\tset(org, false);\n\t}, 3000);\n};\n\ninterface Persisted {}\n\nconst persist = (p: Persisted) => {\n\ttry {\n\t\tlocalStorage.setItem('jb_state', JSON.stringify(p));\n\t} catch (_ex) {\n\t\t//\n\t}\n};\n\nconst initialState = (): State => {\n\tconst persisted = ((): Persisted => {\n\t\ttry {\n\t\t\tconst json = localStorage.getItem('jb_state') ?? '{}';\n\t\t\treturn JSON.parse(json);\n\t\t} catch (_ex) {\n\t\t\t//\n\t\t\treturn {};\n\t\t}\n\t})();\n\n\treturn {};\n};\n","import { runApp } from './js/app.ts';\n\nrunApp().catch(console.error);\n"],"mappings":"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","names":["config","isLocal","__name","isErr","__name","STORAGE_KEY","API_ROOT","mkGitHub","__name","url","doAuth","request","resource","method","query","body","storedTok","getStoredToken","qs","res","json","isAuthError","err","code","path","result","text","draft","d","repo","owner","notesDir","config","branch","isLocal","date","formatDate","fileDate","content","fileName","base64","isErr","str","_match","p1","datePart","n","timePart","WORKER_URL","isLocal","mkService","__name","_service","args","mkGitHub","runApp","svc","root","initial","initialState","setState","reducer","renderApp","App","html","s","tick","update","state","evt","action","textarea","form","text","draft","res","isErr","flash","code","Error","config","NewNote","gen","prev","newState","r","ev","e","err","el","msg","org","set","str","disable","initialState","__name","persisted","json","runApp"],"sourceRoot":"file:///home/runner/work/johanbrook.com/johanbrook.com","file":"/admin.js.map"}