---
layout: layouts/main.njk
home: true
---
<main role="main">
  <div class="measure mx-auto">
    <section class="mb4">
    	<h1 class="title pull-W">Welcome.</h1>

      	<div class="font-sans">{{ content | safe }}</div>

    </section>

    <section class="mb4">
      <header class="flex items-center justify-between">
        <h1 class="f2 mb0">On my mind</h1>

        <p class="mb0 flex items-center gap f6">
        	<a href="/mind" title="Read more">View all</a>
        	<a href="/mind.xml" title="Atom feed">Feed {{ comp.icon({ class: "ml1" }) | safe }}</a>
        </p>
      </header>

      <ol>
        {% for note in search.pages("type=note", "date=desc", 1) %}
          <li>
            <h2 class="font-sans f5 fw4 mb2">
              <a href="{{ note.data.url }}" class="muted">Latest: {{ note.data.date | date("PPP — HH:mm")}}</a>
            </h2>
            <div class="prose font-mono f6">
              {{ note.data.content | excerpt | md | safe }}
            </div>

            {% if (note.data.content | excerpt | length) < (note.data.content | trim | length)  %}
                <p class="mt2 font-sans">
                  <a href="{{ note.data.url }}" class="muted f5">continued ⇢</a>
                </p>
            {% endif %}
          </li>
        {% endfor %}
      </ol>
    </section>

    <section class="mb4">
    	<h1 class="f2 mb0">Listening</h1>
    	<p class="font-sans f5 fw4 mb3 muted" id="music-loading">Tracks I've listened to recently.</p>
    	<ol id="music-target" class="TracksList">

    	</ol>
    </section>

    <section>
      <header class="flex items-center justify-between mb3">
        <h1 class="f2 mb0">Writings</h1>

        <p class="mb0 flex items-center gap f6">
	        <a href="/writings" title="Read more">View all</a>
	        <a href="/feed.xml" title="Atom feed">Feed {{ comp.icon({ class: "ml1" }) | safe }}</a>
        </p>
      </header>

      <ol>
        {% for post in search.pages("type=post", "date=desc", 3) %}
          <li class="mb2 {% if not loop.last %}mb1{% endif %}">
          	<a class="f4 block fw4" href="{{ post.data.url }}">
          		<span class="link">{{ post.data.title }}</span><br />
            	<p class="font-sans f5 muted mb0">{{ post.data.date | date("HUMAN_DATE") }}</p>
            </a>
          </li>
        {% endfor %}
      </ol>
    </section>
  </div>
</main>

<template id="music-tmpl">
	<li class="mb2 leading-tight">
		<span class="music-title block fw7"></span>
		<small class="font-sans f5">
			<span class="music-subtitle muted"></span>
			<time class="music-datetime ml1"></time>
		</small>
	</li>
</template>

<script type="module">
	const ENDPOINT = location.hostname == 'localhost'
		? 'http://localhost:8788'
		: 'https://brookie.pages.dev';

	const render = (target, tracks) => {
		const tmpl = document.getElementById('music-tmpl');
		const fmt = new Intl.DateTimeFormat(undefined, {day: "numeric", month: "short", hour: "numeric", minute: "numeric"});

		for (const track of tracks) {
			const clone = tmpl.content.cloneNode(true);
			const container = clone.querySelector('li')
			const title = clone.querySelector('.music-title')
			const subtitle = clone.querySelector('.music-subtitle');

			title.textContent = track.name;
			subtitle.textContent = `${track.artist['#text']} — ${track.album['#text']}`;

			const dateTime = clone.querySelector('.music-datetime');

			if (track.date) {
				const date = new Date(parseInt(track.date['uts'], 10) * 1000);
				dateTime.textContent = fmt.format(date);
				dateTime.setAttribute('title', date.toUTCString());
			}

			if (track['@attr']?.nowplaying == 'true') {
				title.classList.add('fw7');
				container.classList.add('border', 'border-b', 'mb2', 'pb2');
				dateTime.textContent = 'Listening now';
				dateTime.classList.add('fw7');
			}
			target.appendChild(clone);
		}
	}

	if ('content' in document.createElement('template')) {
		const target = document.getElementById('music-target');
		const loading = document.getElementById('music-loading');
		const original = loading.textContent;
		loading.textContent = 'Loading…';

		try {
			const res = await fetch(ENDPOINT + '/music').then(r => r.json());

			if (res.kind == 'ok') {
				render(target, res.tracks);
			} else {
				target.innerHTML = 'Oops, something went wrong. This is embarrassing…';
				console.warn(res.message);
			}
		} catch (err) {
			console.error(err);
		} finally {
			loading.textContent = original;
		}
	}
</script>
